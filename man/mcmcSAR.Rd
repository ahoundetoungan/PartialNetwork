% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmcSAR.R
\name{mcmcSAR}
\alias{mcmcSAR}
\title{Bayesian Estimator of SAR model}
\usage{
mcmcSAR(
  formula,
  contextual,
  start,
  hyperparms,
  G0 = NULL,
  iteration = 2000,
  ctrl.mcmc = list(),
  data
)
}
\arguments{
\item{formula}{an object of class \link[stats]{formula}: a symbolic description of the model. The `formula` should be as for example \code{y ~ x1 + x2 | x1 + x2}
where `y` is the endogenous vector, the listed variable before the pipe, `x1`, `x2` are the individual exogenous variables and
the listed variables after the pipe, `x1`, `x2` are the contextual observable variables. Other formulas may be
\code{y ~ x1 + x2} for the model without contextual effects, \code{y ~ -1 + x1 + x2 | x1 + x2} for the model
without intercept or \code{ y ~ x1 + x2 | x2 + x3} to allow the contextual variable to be differents from the individual ones.}

\item{contextual}{(optional) logical; if true, this means that all individual variables will be set as contextuals variables. Set the
the `formula` as `y ~ x1 + x2` and `contextual` as `TRUE` is equivalent to set the formula as `y ~ x1 + x2 | x1 + x2`.}

\item{start}{(optional) is the vector of starting value of the model parameter as \eqn{(\beta ~ \gamma ~ \alpha ~ \sigma^2)'}{\beta  \gamma  \alpha  se2},
where \eqn{\beta} is the individual variables parameter, \eqn{\gamma} is the contextual variables parameter, \eqn{\alpha} is the peer effect parameter
and \eqn{\sigma^2}{se2} the variable of the error term. If the `start` is missing, Maximum Likelihood estimator will be used automatically where
the newotk matrix will be the one given throug the argument `G0` (if provided) or generated from it distribution `dnetwork` (see argument `hyperparms`).}

\item{hyperparms}{is a list of hyperparameter parameter. It should contain at least the `dnetwork` which is the linking probabilities. As there are `M` groups and
individual from different groups are not linked, `dnetwork` is a list of `M` matrix where each matrix of the link probability of one group.}

\item{G0}{(optional) is the starting value of the (row normalized) network as a list of `M` sub-network.}

\item{iteration}{is the number of iterations in the MCMC.}

\item{ctrl.mcmc}{is a list of MCMC controls (See details).}

\item{data}{an optional data frame, list or environment (or object coercible by \link[base]{as.data.frame} to a data frame) containing the variables
in the model. If not found in data, the variables are taken from \code{environment(formula)}, typically the environment from which `mcmcARD` is called.}
}
\value{
A list consisting of:
    \item{n.group}{number of groups}
    \item{N}{vector of each group size}
    \item{iteration}{number of iterations if the MCMC}
    \item{posterior}{matrix containing the simulations}
    \item{acceptance}{acceptance rate of zeta}
    \item{G}{last draw of G (row normalized)}
    \item{hyperparms}{list containing the hyperparameters}
    \item{formula}{retun value of `formula`}
    \item{contextual}{return value of `contextual`.}
}
\description{
\code{mcmcSAR} implements the Bayesian estimator of the linear-in-mean SAR model when only the linking probabilities are available.
The linking probabilities are used as hyperparameter of the prior distribution of the network.
}
\details{
The model is given by
\deqn{\mathbf{y} = \mathbf{X}\beta + \mathbf{G}\mathbf{X}\gamma + \alpha \mathbf{G}\mathbf{y} + \epsilon}{y = X\beta + GX\gamma + \alpha Gy + \epsilon}
The parameters to estimate in this model are the matrix \eqn{\mathbf{G}}{G}, the vectors \eqn{\beta}, \eqn{\gamma} and the scalar \eqn{\alpha}, \eqn{\sigma^2}{se2}.
Prior distributions are assumed on \eqn{\mathbf{A}} the adjacency matrix in which \eqn{\mathbf{A}_{ij} = 1}{A[i,j] = 1} if i is  connected to j and
\eqn{\mathbf{A}_{ij} = 0}{A[i,j] = 0} otherwise, and on \eqn{\beta}, \eqn{\gamma}, \eqn{\alpha} and \eqn{\sigma^2}{se2}.
\deqn{\mathbf{A}_{ij} ~ Bernoulli(\mathbf{P}_{ij})}{A[i,j] ~ Bernoulli(P[i,j])}
\deqn{(\beta' ~ \gamma')'|\sigma^2 ~ \mathcal{N}(\mu_{\theta}, \sigma^2\Sigma_{\theta})}{(\beta' ~ \gamma')'|se2 ~ N(mutheta, se2*stheta)}
\deqn{\zeta = \log\left(\frac{\alpha}{1 - \alpha}\right) ~ \mathcal{N}(\mu_{\zeta}, \sigma_{\zeta})}{\zeta = log(\alpha/(1 - \alpha)) ~ N(muzeta, szeta)}
\deqn{\sigma^2 ~ IG(\frac{a}{2}, \frac{b}{2})}{se2 ~ IG(a/2, b/2)}
where \eqn{\mathbf{P}}{P} is the linking probability.\cr

All hyperparameter can be defined in `hyperparms` and should be named as
\itemize{
\item `dnetwork`, the linking probability. This hyperparameter is required.
\item `mutheta`, the prior mean of \eqn{(\beta' ~ \gamma')'|\sigma^2}{(\beta' ~ \gamma')'|se2}. The default value assumes that
the prior mean is zero.
\item `invstheta` as \eqn{\Sigma_{\theta}^{-1}}{inverse of `stheta`}. The default value is a diagonal matrix with 0.01 on the diagonal.
\item `muzeta`, the prior mean of \eqn{\zeta}. The default value is zero.
\item `invszeta`, the inverse of the prior variance of \eqn{\zeta} with default value equal to 2.
\item `a` and `b` default values are 4.2 and 2.2. This means for example that the prior mean od \eqn{\sigma^2}{se2} is 1.
}
Typically, the inverses are used for the priori variance in the normal distribution to allow non informative prior. Set the inverse of the prior
variabce to 0 is equivalent to non informative prior.\cr
During the MCMC, the jumping scales are updated following Atchad√© and Rosenthal (2005) in order to target the acceptance rate of \eqn{\alpha} to the `target` value. This
requires to set minimal and maximal jumpings scales through the parameter `ctrl.mcmc`. The parameter `ctrl.mcmc` is a list which can contain the following named components.
\itemize{
\item{`target`}: The default value is 0.44. 
\item{`jumpmin`}: The default value is \code{1e-12}. 
\item{`jumpmax`}: The default value is \code{10}. 
\item{`print`}: A logical value which indicates if the MCMC progression should be printed in the console. The default value is `TRUE`.
\item{`block.max`}: The maximal number of entries that can be updated simultaneously in \eqn{\mathbf{A}}{A}. For some convergence reasons it mighit be 
more efficient to update simultaneously 2 or 3 entries (see Boucher and Houndetoungan, 2019).
}
}
\examples{
\dontrun{
# Number of groups
M             <- 100
# size of each group
N             <- rep(50,M)
# precision parameter for the network formation process
lambda        <- 1 

G             <- list()

# individual effects
beta          <- c(2,1,1.5) 
# contextual effects
gamma         <- c(5,-3) 
# endogenous effect
alpha         <- 0.4
# std-dev errors
se            <- 1 

prior         <-list()

## generate network probabilities
for (m in 1:M) {
  Nm          <- N[m]
    c           <- rnorm(Nm*Nm,0,1)
    # linking probabilities
    Prob        <- matrix(exp(c/lambda)/(1+exp(c/lambda)),Nm) 
    # no self-link
   diag(Prob)  <- 0 
   prior[[m]]  <-Prob
}

## generate data
# covariates
X             <- cbind(rnorm(sum(N),0,5),rpois(sum(N),7))
# dependent variable
y             <- c()

for (m in 1:M) {
  Nm          <- N[m]
  # true network
  Gm          <- matrix(runif(Nm^2),Nm,Nm) < prior[[m]] 
  # no self-link
  diag(Gm)    <- rep(0,Nm) 
  G[[m]]      <- Gm
  rsm         <- rowSums(Gm)
  rsm[rsm==0] <- 1
  # normalize
  Gm          <- Gm/rsm 
  # rows index of group m
  r2          <- sum(N[1:m])
  r1          <- r2 - Nm + 1
  # contextual effect
  Xm          <- X[r1:r2,]
  GXm         <- Gm %*% Xm
  y[r1:r2]    <- solve(diag(Nm)-alpha*Gm) %*% (cbind(rep(1,Nm),Xm) %*% beta + GXm %*% gamma + rnorm(Nm,0,se)) 
}
  
# number of parameters
Kv            <- 2*ncol(X) + 1 

# set the hyperparameter
# the hyperparameter is a list
hyperparms    <- list("dnetwork" = prior) 

# launch the MCMC
out           <- mcmcSAR(y ~ X | X, hyperparms = hyperparms)
}
}
\references{
Boucher, V., & Houndetoungan, A. (2019). Estimating peer effects using partial network data. \emph{Draft avaliable at} \url{https://houndetoungan.wixsite.com/aristide/research}.
}
\seealso{
\code{\link{sim.IV}}
}
